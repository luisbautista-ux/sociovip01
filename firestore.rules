rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funciones de Ayuda ---
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/platformUsers/$(request.auth.uid)).data;
    }

    function isSuperAdmin() {
      return isSignedIn() && 'superadmin' in getUserData().roles;
    }

    function isBusinessMember() {
      let userRoles = getUserData().roles;
      // CORRECCIÓN: Usar 'in' para verificar si el rol existe en cualquier parte del array,
      // en lugar de depender de la posición roles[0].
      return isSignedIn() && ('business_admin' in userRoles || 'staff' in userRoles);
    }

    function isAllowedToReadBusinessData(businessId) {
        return isSuperAdmin() || (isBusinessMember() && getUserData().businessId == businessId);
    }
    
    // --- Reglas por Colección ---

    // Perfiles de Usuario: Solo SuperAdmin puede gestionar. El propio usuario puede leer su perfil.
    match /platformUsers/{userId} {
      allow read, write: if isSuperAdmin();
      allow get: if isSignedIn() && request.auth.uid == userId;
    }

    // Negocios: Lectura pública, escritura solo para SuperAdmin.
    match /businesses/{businessId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Entidades del Negocio (Promociones/Eventos): Lectura pública, escritura para miembros del negocio.
    match /businessEntities/{entityId} {
      allow read: if true;
      allow write: if isSignedIn() && isAllowedToReadBusinessData(resource.data.businessId);
    }
    
    // Clientes QR: Creación pública, lectura restringida a miembros del negocio.
    match /qrClients/{clientId} {
      allow create: if true;
      allow read: if isSignedIn() && isAllowedToReadBusinessData(resource.data.generatedForBusinessId);
      allow update, delete: if false;
    }

    // Socios VIP: Gestión por SuperAdmin. Los miembros del negocio pueden leer si el socio tiene su businessId.
    match /socioVipMembers/{memberId} {
       allow read: if isSuperAdmin() || (isBusinessMember() && getUserData().businessId == resource.data.businessId);
       allow write: if isSuperAdmin();
    }
    
    // Vínculos de Promotores: Gestión por miembros del negocio.
    match /businessPromoterLinks/{linkId} {
      allow read, write: if isSignedIn() && isAllowedToReadBusinessData(resource.data.businessId);
    }
  }
}
