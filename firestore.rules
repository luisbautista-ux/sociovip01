rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función para verificar si un usuario tiene un rol específico.
    function hasRole(role) {
      return get(/databases/$(database)/documents/platformUsers/$(request.auth.uid)).data.roles.hasAny([role]);
    }
    
    // Función para verificar si un usuario es admin de un negocio específico.
    function isBusinessAdmin(businessId) {
      let userProfile = get(/databases/$(database)/documents/platformUsers/$(request.auth.uid)).data;
      return userProfile.roles.hasAny(['business_admin']) && userProfile.businessId == businessId;
    }
    
    // Función para verificar si el usuario es un miembro del staff de un negocio.
    function isStaff(businessId) {
       let userProfile = get(/databases/$(database)/documents/platformUsers/$(request.auth.uid)).data;
       return userProfile.roles.hasAny(['business_admin', 'staff', 'host']) && userProfile.businessId == businessId;
    }

    // Colección de Negocios
    match /businesses/{businessId} {
      allow read: if true; // Cualquiera puede leer la información pública de un negocio.
      allow write: if hasRole('superadmin'); // Solo Super Admins pueden crear, editar, eliminar negocios.
    }
    
    // Colección de Entidades del Negocio (Promociones, Eventos, etc.)
    match /businessEntities/{entityId} {
      allow read: if true; // Cualquiera puede leer promociones/eventos.
      allow create, update: if isBusinessAdmin(request.resource.data.businessId); // Admins de negocio pueden crear/actualizar para SU negocio.
      allow delete: if isBusinessAdmin(resource.data.businessId); // Admins de negocio pueden borrar de SU negocio.
    }

    // Colección de Usuarios de la Plataforma (Admins, Staff, etc.)
    match /platformUsers/{userId} {
      allow read: if request.auth != null; // Cualquier usuario autenticado puede leer perfiles (para validación de roles, etc).
      // Superadmin puede escribir cualquier perfil
      allow write: if hasRole('superadmin');

      // Un business_admin puede crear un nuevo usuario de staff/host para su propio negocio.
      allow create: if isBusinessAdmin(request.resource.data.businessId) && 
                      (request.resource.data.roles.hasOnly(['staff']) || 
                       request.resource.data.roles.hasOnly(['host']) ||
                       request.resource.data.roles.hasOnly(['staff', 'host']));

      // Un usuario puede actualizar su propio perfil (ej. último login)
      allow update: if request.auth.uid == userId;
    }
    
    // Colección de Clientes que generaron QR
    match /qrClients/{clientId} {
      allow read: if hasRole('superadmin'); // Solo Super Admins pueden ver todos los clientes.
      allow create: if true; // Cualquiera puede crear un nuevo perfil de cliente QR al generar un código.
      allow update, delete: if hasRole('superadmin');
    }
    
    // Colección de Socios VIP
    match /socioVipMembers/{memberId} {
      allow read: if hasRole('superadmin'); // Por ahora, solo superadmin
      allow write: if hasRole('superadmin'); // Solo superadmin gestiona VIPs
    }

    // Colección de Vínculos Promotor-Negocio
    match /businessPromoterLinks/{linkId} {
      allow read: if isStaff(resource.data.businessId) || hasRole('superadmin'); // Staff puede leer los promotores de su negocio.
      allow create, delete: if isBusinessAdmin(request.resource.data.businessId) || hasRole('superadmin'); // Admin del negocio puede crear/borrar vínculos.
      allow update: if isBusinessAdmin(resource.data.businessId) || hasRole('superadmin'); // Admin del negocio puede actualizar vínculos (ej. comisión).
    }
  }
}
