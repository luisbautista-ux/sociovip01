rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =============================== 
    //            Helpers
    // ===============================
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserProfile(userId) {
      return get(/databases/$(database)/documents/platformUsers/$(userId));
    }
    
    function isSuperAdmin() {
      return isSignedIn() && getUserProfile(request.auth.uid).data.roles.hasAny(['superadmin']);
    }

    function isBusinessAdmin(businessId) {
      return isSignedIn() 
        && getUserProfile(request.auth.uid).data.roles.hasAny(['business_admin'])
        && getUserProfile(request.auth.uid).data.businessId == businessId;
    }

    function isStaff(businessId) {
      return isSignedIn()
        && getUserProfile(request.auth.uid).data.roles.hasAny(['staff'])
        && getUserProfile(request.auth.uid).data.businessId == businessId;
    }

    function isHost(businessId) {
      return isSignedIn()
        && getUserProfile(request.auth.uid).data.roles.hasAny(['host'])
        && getUserProfile(request.auth.uid).data.businessId == businessId;
    }
    
    function isPromoter() {
        return isSignedIn() && getUserProfile(request.auth.uid).data.roles.hasAny(['promoter']);
    }

    // ===============================
    //          Collections
    // ===============================

    match /businesses/{businessId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin();
      allow update: if isBusinessAdmin(businessId) || isStaff(businessId);
    }
    
    match /businessEntities/{entityId} {
      allow read: if true;
      allow create, delete: if isSuperAdmin() || isBusinessAdmin(resource.data.businessId);
      allow update: if isSuperAdmin() 
                      || isBusinessAdmin(request.resource.data.businessId) 
                      || isStaff(request.resource.data.businessId);
    }
    
    match /qrClients/{clientId} {
      allow get, list, create: if true;
      allow update, delete: if false; 
    }
    
    match /platformUsers/{userId} {
      allow read: if isSignedIn();
      
      // Regla corregida para crear personal
      allow create: if isSuperAdmin() || 
        (
            isSignedIn() &&
            // El que crea es un business_admin
            getUserProfile(request.auth.uid).data.roles.hasAny(['business_admin']) &&
            // El businessId del nuevo usuario es el mismo que el del admin que lo crea
            request.resource.data.businessId == getUserProfile(request.auth.uid).data.businessId &&
            // El nuevo usuario solo puede tener roles 'staff' o 'host'
            request.resource.data.roles.hasOnly(['staff', 'host'])
        );
      
      // Reglas para actualizar o borrar
      allow update, delete: if isSuperAdmin() || 
        (
            isSignedIn() &&
            isBusinessAdmin(resource.data.businessId) &&
            // No se puede modificar a un superadmin
            !('superadmin' in resource.data.roles)
        );
    }
    
    match /businessPromoterLinks/{linkId} {
      allow read: if isSuperAdmin() || isPromoter() || isBusinessAdmin(resource.data.businessId);
      allow create, update, delete: if isSuperAdmin() || isBusinessAdmin(request.resource.data.businessId);
    }
    
    match /socioVipMembers/{memberId} {
      allow read, write: if isSuperAdmin();
    }
  }
}
